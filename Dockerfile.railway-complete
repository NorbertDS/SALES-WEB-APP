# Complete Railway Dockerfile for Frontend + Backend
FROM python:3.11-slim

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y curl nginx && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip install fastapi uvicorn

# Copy backend files
COPY backend/simple_server.py /app/
COPY backend/requirements.txt /app/

# Install additional dependencies if needed
RUN pip install -r requirements.txt 2>/dev/null || echo "Requirements not found, continuing..."

# Copy frontend files
COPY enhanced_dashboard.html /app/static/
COPY config.js /app/static/
COPY index.html /app/static/

# Create nginx configuration
RUN echo 'server { \
    listen 80; \
    server_name _; \
    root /app/static; \
    index enhanced_dashboard.html; \
    \
    location / { \
        try_files $uri $uri/ /enhanced_dashboard.html; \
    } \
    \
    location /api/ { \
        proxy_pass http://localhost:8000; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    location /health { \
        proxy_pass http://localhost:8000; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/sites-available/default

# Create startup script
RUN echo '#!/bin/bash \
# Start backend in background \
python simple_server.py & \
# Start nginx in foreground \
nginx -g "daemon off;"' > /app/start.sh && chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Expose port
EXPOSE 80

# Run the startup script
CMD ["/app/start.sh"]
